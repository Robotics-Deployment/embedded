name: Build

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Build environment
    - name: Start containers
      run: export IMAGE=ubuntu:22.04 && docker-compose -f "build.yaml" up -d --build

    # Compile and strip binaries
    - name: Build x86_64
      run: docker exec rdembedded cargo build --release --target x86_64-unknown-linux-gnu

    - name: Build arm64
      run: docker exec rdembedded cargo build --release --target aarch64-unknown-linux-gnu

    # Strip binaries
    - name: Strip x86_64
      run: docker exec rdembedded x86_64-linux-gnu-strip target/x86_64-unknown-linux-gnu/release/rdembedded

    - name: Strip aarch64
      run: docker exec rdembedded aarch64-linux-gnu-strip target/aarch64-unknown-linux-gnu/release/rdembedded

      # Rename binaries
    - name: Rename x86_64
      run: docker exec rdembedded mv target/x86_64-unknown-linux-gnu/release/rdembedded target/x86_64-unknown-linux-gnu/release/rdembedded-x86_64

    - name: Rename aarch64
      run: docker exec rdembedded mv target/aarch64-unknown-linux-gnu/release/rdembedded target/aarch64-unknown-linux-gnu/release/rdembedded-aarch64

    # Cleanup environment
    - name: Stop Docker Compose services
      run: docker-compose -f "build.yaml" down

    # Upload artifacts
    - uses: actions/upload-artifact@v3
      with:
        name: rdembedded-x86_64
        path: |
          target/x86_64-unknown-linux-gnu/release/rdembedded-x86_64

    - uses: actions/upload-artifact@v3
      with:
        name: rdembedded-aarch64
        path: |
          target/aarch64-unknown-linux-gnu/release/rdembedded-aarch64

    # Create GitHub Release
    - name: Generate Tag Name
      id: generate_tag
      run: echo "::set-output name=tag_name::v$(date +'%Y%m%d%H%M%S')"

    - name: Create Git Tag
      run: git tag ${{ steps.generate_tag.outputs.tag_name }}

    - name: Push Git Tag
      run: git push origin ${{ steps.generate_tag.outputs.tag_name }}

    # Release And Upload Binaries
    - name: Create GitHub Release and Upload Binaries
      uses: softprops/action-gh-release@v0.1.15
      with:
        files: |
          ./target/x86_64-unknown-linux-gnu/release/rdembedded-x86_64
          ./target/aarch64-unknown-linux-gnu/release/rdembedded-aarch64
          ./LICENSE
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ steps.generate_tag.outputs.tag_name }}
        name: Release ${{ steps.generate_tag.outputs.tag_name }}
        body: Automated release of ${{ github.sha }}
